{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const invoicesSlice = createSlice({\n  name: 'invoices',\n  initialState: {\n    invoices: []\n  },\n  reducers: {\n    fetch: state => invoices => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(\"invoices\", invoices);\n      state.invoices = invoices;\n    },\n    update: state => {},\n    add: (state, action) => {\n      console.log(\"Add to invoice\");\n    }\n  }\n});\nexport const fetchInvoices = createAsyncThunk('invoices/fetInvoices', async () => {\n  //const response = await client.get('/fakeApi/posts')\n  //return response.data\n  return [];\n});\nexport const {\n  fetchData,\n  update,\n  add\n} = invoicesSlice.actions;\nexport default invoicesSlice.reducer;","map":{"version":3,"sources":["/var/www/html/demo/pos_codetest/pos_frontend_app/src/reducer/invoices/invoicesSlice.js"],"names":["createSlice","createAsyncThunk","invoicesSlice","name","initialState","invoices","reducers","fetch","state","console","log","update","add","action","fetchInvoices","fetchData","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AAEA,OAAO,MAAMC,aAAa,GAAGF,WAAW,CAAC;AACvCG,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAC;AADG,GAFyB;AAKvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAEC,KAAK,IAAIH,QAAQ,IAAI;AAC1B;AACA;AACA;AACA;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBL,QAAvB;AACAG,MAAAA,KAAK,CAACH,QAAN,GAAiBA,QAAjB;AAED,KATO;AAURM,IAAAA,MAAM,EAAEH,KAAK,IAAI,CAEhB,CAZO;AAaRI,IAAAA,GAAG,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAEpBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AAhBO;AAL6B,CAAD,CAAjC;AAyBP,OAAO,MAAMI,aAAa,GAAGb,gBAAgB,CAAC,sBAAD,EAAyB,YAAY;AAC9E;AACA;AACA,SAAO,EAAP;AACH,CAJ4C,CAAtC;AAOP,OAAO,MAAM;AAAEc,EAAAA,SAAF;AAAaJ,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,IAA6BV,aAAa,CAACc,OAAjD;AAEP,eAAed,aAAa,CAACe,OAA7B","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const invoicesSlice = createSlice({\n  name: 'invoices',\n  initialState: {\n    invoices:[]\n  },\n  reducers: {\n    fetch: state => invoices => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(\"invoices\",invoices);\n      state.invoices = invoices;\n\n    },\n    update: state => {\n\n    },\n    add: (state, action) => {\n\n        console.log(\"Add to invoice\");\n    }\n  }\n})\n\nexport const fetchInvoices = createAsyncThunk('invoices/fetInvoices', async () => {\n    //const response = await client.get('/fakeApi/posts')\n    //return response.data\n    return [];\n})\n\n\nexport const { fetchData, update, add } = invoicesSlice.actions\n\nexport default invoicesSlice.reducer"]},"metadata":{},"sourceType":"module"}