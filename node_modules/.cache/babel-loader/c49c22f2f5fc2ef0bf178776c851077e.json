{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const invoicesSlice = createSlice({\n  name: 'invoices',\n  initialState: {\n    invoices: []\n  },\n  reducers: {\n    fetch: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(\"Fetch invoices\");\n    },\n    update: state => {},\n    add: (state, action) => {}\n  }\n});\nexport const {\n  fetch,\n  update,\n  add\n} = invoicesSlice.actions;\nexport default invoicesSlice.reducer;","map":{"version":3,"sources":["/var/www/html/demo/pos_codetest/pos_frontend_app/src/reducer/invoices/invoicesSlice.js"],"names":["createSlice","invoicesSlice","name","initialState","invoices","reducers","fetch","state","console","log","update","add","action","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;AACvCE,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAC;AADG,GAFyB;AAKvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACd;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAED,KARO;AASRC,IAAAA,MAAM,EAAEH,KAAK,IAAI,CAEhB,CAXO;AAYRI,IAAAA,GAAG,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB,CAEvB;AAdO;AAL6B,CAAD,CAAjC;AAuBP,OAAO,MAAM;AAAEN,EAAAA,KAAF;AAASI,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,IAAyBV,aAAa,CAACY,OAA7C;AAEP,eAAeZ,aAAa,CAACa,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const invoicesSlice = createSlice({\n  name: 'invoices',\n  initialState: {\n    invoices:[]\n  },\n  reducers: {\n    fetch: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(\"Fetch invoices\");\n\n    },\n    update: state => {\n\n    },\n    add: (state, action) => {\n\n    }\n  }\n})\n\nexport const { fetch, update, add } = invoicesSlice.actions\n\nexport default invoicesSlice.reducer"]},"metadata":{},"sourceType":"module"}